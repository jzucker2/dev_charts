apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "airflow.fullname" . }}
  labels:
    app: {{ template "airflow.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  template:
    metadata:
      labels:
        app: {{ template "airflow.name" . }}
        release: {{ .Release.Name }}
    spec:
      initContainers:
        - name: git-sync
          image: gcr.io/google-containers/git-sync-amd64:v2.0.5
          imagePullPolicy: Always
          # workaround for git credentials issue
          # https://github.com/kubernetes/git-sync/issues/38
          securityContext:
            runAsUser: 0
          volumeMounts:
            - name: checkout
              mountPath: /git
          env:
            - name: GIT_SYNC_REPO
              value: {{ .Values.git.repo }}
            - name: GIT_SYNC_DEST
              value: checkedoutdags
            - name: GIT_SYNC_ONE_TIME
              value: "true"
            - name: GIT_SYNC_USERNAME
              valueFrom:
                secretKeyRef:
                  name: gitsecret
                  key: username
            - name: GIT_SYNC_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: gitsecret
                  key: password
        - name: {{ .Chart.Name }}-init
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
          - name: airflow-configmap
            mountPath: /root/airflow/airflow.cfg
            subPath: airflow.cfg
          - name: airflow-dags
            mountPath: /root/airflow/dags
          - name: checkout
            mountPath: /checkout
          env:
          - name: SQL_ALCHEMY_CONN
            valueFrom:
              secretKeyRef:
                name: airflow-secrets
                key: sql_alchemy_conn
          - name: AIRFLOW_CONN_PORTAL_DB_URI
            valueFrom:
              secretKeyRef:
                name: portaldbsecret
                key: portal_mysql_conn
          - name: AIRFLOW_CONN_OVERMIND_DB_URI
            valueFrom:
              secretKeyRef:
                name: overminddbsecret
                key: overmind_mysql_conn
          command:
            - "bash"
          args:
            - "-cx"
            - "cd /usr/local/lib/python2.7/dist-packages/airflow && cp -R /checkout/checkedoutdags/dags/* /root/airflow/dags/ && airflow initdb && alembic upgrade head"
      containers:
        - name: {{ .Chart.Name }}-web
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.web.containerPort }}
              name: http
          args: ["webserver"]
          env:
          - name: AIRFLOW_KUBE_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: SQL_ALCHEMY_CONN
            valueFrom:
              secretKeyRef:
                name: airflow-secrets
                key: sql_alchemy_conn
          - name: GIT_SYNC_USERNAME
            valueFrom:
              secretKeyRef:
                name: gitsecret
                key: username
          - name: GIT_SYNC_PASSWORD
            valueFrom:
              secretKeyRef:
                name: gitsecret
                key: password
          - name: AIRFLOW_CONN_PORTAL_DB_URI
            valueFrom:
              secretKeyRef:
                name: portaldbsecret
                key: portal_mysql_conn
          - name: AIRFLOW_CONN_OVERMIND_DB_URI
            valueFrom:
              secretKeyRef:
                name: overminddbsecret
                key: overmind_mysql_conn
          volumeMounts:
          - name: airflow-configmap
            mountPath: /root/airflow/airflow.cfg
            subPath: airflow.cfg
          - name: airflow-dags
            mountPath: /root/airflow/dags
          livenessProbe:
            initialDelaySeconds: 5
            timeoutSeconds: 5
            failureThreshold: 5
            httpGet:
              path: /admin
              port: {{ .Values.web.containerPort }}
          readinessProbe:
            initialDelaySeconds: 5
            timeoutSeconds: 5
            periodSeconds: 5
            httpGet:
              path: /admin
              port: {{ .Values.web.containerPort }}
        - name: {{ .Chart.Name }}-scheduler
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args: ["scheduler"]
          env:
          - name: AIRFLOW_KUBE_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: SQL_ALCHEMY_CONN
            valueFrom:
              secretKeyRef:
                name: airflow-secrets
                key: sql_alchemy_conn
          - name: GIT_SYNC_USERNAME
            valueFrom:
              secretKeyRef:
                name: gitsecret
                key: username
          - name: GIT_SYNC_PASSWORD
            valueFrom:
              secretKeyRef:
                name: gitsecret
                key: password
          - name: AIRFLOW_CONN_PORTAL_DB_URI
            valueFrom:
              secretKeyRef:
                name: portaldbsecret
                key: portal_mysql_conn
          - name: AIRFLOW_CONN_OVERMIND_DB_URI
            valueFrom:
              secretKeyRef:
                name: overminddbsecret
                key: overmind_mysql_conn
          volumeMounts:
          - name: airflow-configmap
            mountPath: /root/airflow/airflow.cfg
            subPath: airflow.cfg
          - name: airflow-dags
            mountPath: /root/airflow/dags
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
  {{ toYaml .Values.imagePullSecrets | indent 8 }}
      {{- end }}
      volumes:
      - name: airflow-dags
      {{- if .Values.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ .Values.persistence.existingClaim | default "airflow-dags" }}
      {{- else }}
        emptyDir: {}
      {{- end }}
      - name: airflow-configmap
        configMap:
          name: airflow-configmap
      - name: checkout
        emptyDir: {}
